                      | # Execution begins at address 0
  0x000:              | 	    .pos 0
  0x000: 30f400010000 | init:	irmovl Stack, %esp      # Set up stack pointer
  0x006: 30f500010000 |         irmovl Stack, %ebp      # Set up base pointer
  0x00c: 802c000000   |         call Main               # Set up stack pointer
  0x011: 00           |         halt                    # Set up stack pointer
                      | 
                      | # List of 3 elements
  0x014:              |         .align  4
  0x014: 000c0000     | ele3:   .long   0xc00 
  0x018: 00000000     |         .long   0x0
                      | 
  0x01c:              |         .align  4
  0x01c: b0000000     | ele2:   .long   0xb0 
  0x020: 14000000     |         .long   ele3
                      | 
  0x024:              |         .align  4
  0x024: 0a000000     | ele1:   .long   0xa 
  0x028: 1c000000     |         .long   ele2
                      | 
  0x02c: a05f         | Main:   pushl %ebp
  0x02e: 2045         |         rrmovl %esp,%ebp
  0x030: 30f224000000 |         irmovl $ele1,%edx
  0x036: a02f         |         pushl %edx              # Push array
  0x038: 8042000000   |         call sum_list           # sum_list(&ele1)
  0x03d: 2054         |         rrmovl %ebp,%esp
  0x03f: b05f         |         popl %ebp
  0x041: 90           |         ret
                      | 
                      |         # int sum_list(list_ptr ls)
  0x042:              | sum_list:
  0x042: a05f         |         pushl %ebp
  0x044: 2045         |         rrmovl %esp,%ebp
  0x046: 502508000000 |         mrmovl 8(%ebp),%edx     # edx = ls
  0x04c: 6300         |         xorl %eax,%eax          # sum = 0
  0x04e: 6222         |         andl %edx,%edx          # Set condition codes
  0x050: 736a000000   |         je End
  0x055: 506200000000 | Loop:   mrmovl (%edx),%esi      # get *Start
  0x05b: 6060         |         addl %esi,%eax          # add to sum
  0x05d: 502204000000 |         mrmovl 4(%edx),%edx
  0x063: 6222         |         andl %edx,%edx          # Set condition codes
  0x065: 7455000000   |         jne Loop                # Stop when 0
  0x06a: 2054         | End:    rrmovl %ebp,%esp
  0x06c: b05f         |         popl %ebp
  0x06e: 90           |         ret
                      | 
                      | # The stack starts here and grows to lower addresses
  0x100:              |         .pos 0x100
  0x100:              | Stack:
