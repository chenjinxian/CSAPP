                      | # Execution begins at address 0
  0x000:              | 	    .pos 0
  0x000: 30f400010000 | init:	irmovl Stack, %esp      # Set up stack pointer
  0x006: 30f500010000 |         irmovl Stack, %ebp      # Set up base pointer
  0x00c: 802c000000   |         call Main               # Execute main program
  0x011: 00           |         halt                    # Terminate program
                      | 
  0x014:              |         .align  4
                      | # Source block
  0x014:              | src:
  0x014: 0a000000     |         .long 0x00a
  0x018: b0000000     |         .long 0x0b0
  0x01c: 000c0000     |         .long 0xc00
                      | 
                      | # Destination block
  0x020:              | dest:
  0x020: 11010000     |         .long 0x111
  0x024: 22020000     |         .long 0x222
  0x028: 33030000     |         .long 0x333
                      | 
  0x02c: a05f         | Main:   pushl %ebp
  0x02e: 2045         |         rrmovl %esp,%ebp
  0x030: 30f003000000 |         irmovl $3,%eax
  0x036: a00f         |         pushl %eax              # Push 3(len)
  0x038: 30f120000000 |         irmovl dest,%ecx
  0x03e: a01f         |         pushl %ecx              # Push dest
  0x040: 30f214000000 |         irmovl src,%edx
  0x046: a02f         |         pushl %edx              # Push src
  0x048: 8052000000   |         call copy_block         # copy_block(src, dest, len)
  0x04d: 2054         |         rrmovl %ebp,%esp
  0x04f: b05f         |         popl %ebp
  0x051: 90           |         ret
                      | 
                      |         # int copy_block(int *src, int *dest, int len)
  0x052:              | copy_block:
  0x052: a05f         |         pushl %ebp
  0x054: 2045         |         rrmovl %esp,%ebp
  0x056: 503508000000 |         mrmovl 8(%ebp),%ebx     # ebx = src
  0x05c: 50150c000000 |         mrmovl 12(%ebp),%ecx    # ecx = dest
  0x062: 502510000000 |         mrmovl 16(%ebp),%edx    # edx = len
  0x068: 6300         |         xorl %eax,%eax          # result = 0
  0x06a: 6222         |         andl %edx,%edx          # If len <= 0, goto End
  0x06c: 7196000000   |         jle End
  0x071: 506300000000 | Loop:   mrmovl (%ebx),%esi      # get *ls
  0x077: 30f704000000 |         irmovl $4,%edi
  0x07d: 6073         |         addl %edi,%ebx
  0x07f: 406100000000 |         rmmovl %esi,(%ecx)
  0x085: 6071         |         addl %edi,%ecx
  0x087: 6360         |         xorl %esi,%eax
  0x089: 30f7ffffffff |         irmovl $-1,%edi
  0x08f: 6072         |         addl %edi,%edx
  0x091: 7471000000   |         jne Loop                # Stop when 0
  0x096: 2054         | End:    rrmovl %ebp,%esp
  0x098: b05f         |         popl %ebp
  0x09a: 90           |         ret
                      | 
                      | # The stack starts here and grows to lower addresses
  0x100:              |         .pos 0x100
  0x100:              | Stack:
